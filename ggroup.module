<?php

/**
 * @file
 * Enables Subgroup functionality.
 */

use Drupal\group\Entity\GroupTypeInterface;
use Drupal\group\Entity\GroupRelationshipInterface;

/**
 * Implements hook_entity_type_alter().
 */
function ggroup_entity_type_alter(array &$entity_types) {
  /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
  // Add the subgroup creation wizard steps as entity forms.
  $entity_types['group']->setFormClass('ggroup-form', 'Drupal\ggroup\Form\SubgroupFormStep1');

  $entity_types['group_content']
    ->setLinkTemplate('subgroup_add_form', '/group/{group}/subgroup/create/{group_type}')
    ->setFormClass('ggroup-form', 'Drupal\ggroup\Form\SubgroupFormStep2')
    // Make sure circular references cannot be created with subgroups.
    ->addConstraint('GroupSubgroup');
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function ggroup_group_type_insert(GroupTypeInterface $group_type) {
  \Drupal::service('group_relation_type.manager')->clearCachedDefinitions();
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function ggroup_group_content_insert(GroupRelationshipInterface $group_relationship) {
  if ($group_relationship->getPlugin()->getRelationType()->getEntityTypeId() !== 'group') {
    return;
  }

  \Drupal::service('ggroup.group_hierarchy_manager')->addSubgroup($group_relationship);
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function ggroup_group_content_delete(GroupRelationshipInterface $group_content) {
  if ($group_content->getPlugin()->getRelationType()->getEntityTypeId() !== 'group') {
    return;
  }

  \Drupal::service('ggroup.group_hierarchy_manager')->removeSubgroup($group_content);
}
